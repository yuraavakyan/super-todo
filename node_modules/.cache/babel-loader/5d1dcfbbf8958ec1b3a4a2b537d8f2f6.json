{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/yuri/bitschool/TodoProject/super-todo/src/components/mainPage/Demo.js\";\nimport React, { Component } from \"react\";\nimport Tasks from \"../tasks/Tasks\";\nimport check from \"../../images/check.png\";\nimport Navbar from \"../navbar/Navbar\";\nimport idGenerator from \"react-id-generator\";\n\nclass ToDo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      inputValue: \"\"\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        inputValue: event.target.value\n      });\n    };\n\n    this.handleReset = event => {};\n\n    this.handleAddTask = () => {\n      if (!this.state.inputValue == \"\") {\n        const {\n          inputValue\n        } = this.state;\n        const tasks = [...this.state.tasks];\n        const newTask = {\n          id: idGenerator(\"task\"),\n          value: inputValue\n        };\n        tasks.push(newTask);\n        this.setState({\n          tasks: tasks,\n          inputValue: \"\"\n        });\n      }\n    };\n\n    this.handleDelete = event => {\n      const {\n        tasks\n      } = this.state;\n      const id = event.target.parentNode.parentNode.id;\n      console.log(id);\n      const index = tasks.findIndex(element => element.id == id);\n      console.log(index);\n      tasks.splice(index, 1);\n      this.setState({\n        tasks: tasks\n      });\n      console.log(this.state);\n    };\n\n    this.handleReset = event => {\n      this.setState({\n        tasks: []\n      });\n    };\n  }\n\n  render() {\n    const {\n      inputValue,\n      tasks\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputPart\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Anything ToDo?\",\n            onChange: this.handleChange,\n            value: this.state.inputValue,\n            className: \"inp\",\n            onKeyPress: event => {\n              if (event.key == \"Enter\") {\n                this.handleAddTask();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleAddTask,\n            className: \"button\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resultPart\",\n          value: this.state.tasks,\n          children: tasks.map((task, index) => {\n            return /*#__PURE__*/_jsxDEV(Tasks, {\n              data: task,\n              handleDelete: this.handleDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reset\",\n        onClick: this.handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ToDo;","map":{"version":3,"sources":["/home/yuri/bitschool/TodoProject/super-todo/src/components/mainPage/Demo.js"],"names":["React","Component","Tasks","check","Navbar","idGenerator","ToDo","state","tasks","inputValue","handleChange","event","setState","target","value","handleReset","handleAddTask","newTask","id","push","handleDelete","parentNode","console","log","index","findIndex","element","splice","render","key","map","task"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Tasks from \"../tasks/Tasks\";\nimport check from \"../../images/check.png\";\nimport Navbar from \"../navbar/Navbar\";\nimport idGenerator from \"react-id-generator\";\n\nclass ToDo extends Component {\n  state = {\n    tasks: [],\n    inputValue: \"\",\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      inputValue: event.target.value,\n    });\n  };\n\n  handleReset = (event) => {};\n\n  handleAddTask = () => {\n    if (!this.state.inputValue == \"\") {\n      const { inputValue } = this.state;\n      const tasks = [...this.state.tasks];\n      const newTask = {\n        id: idGenerator(\"task\"),\n        value: inputValue,\n      };\n\n      tasks.push(newTask);\n      this.setState({\n        tasks: tasks,\n        inputValue: \"\",\n      });\n    }\n  };\n\n  handleDelete = (event) => {\n    const { tasks } = this.state;\n    const id = event.target.parentNode.parentNode.id;\n    console.log(id);\n    const index = tasks.findIndex((element) => element.id == id);\n    console.log(index);\n    tasks.splice(index, 1);\n    this.setState({\n      tasks: tasks,\n    });\n\n    console.log(this.state);\n  };\n\n  handleReset = (event) => {\n    this.setState({\n      tasks: [],\n    });\n  };\n\n  render() {\n    const { inputValue, tasks } = this.state;\n    return (\n      <div className=\"main\">\n        <div className=\"container\">\n          <div className=\"inputPart\">\n            <input\n              type=\"text\"\n              placeholder=\"Anything ToDo?\"\n              onChange={this.handleChange}\n              value={this.state.inputValue}\n              className=\"inp\"\n              onKeyPress={(event) => {\n                if (event.key == \"Enter\") {\n                  this.handleAddTask();\n                }\n              }}\n            ></input>\n            <button onClick={this.handleAddTask} className=\"button\">\n              +\n            </button>\n          </div>\n          <div className=\"resultPart\" value={this.state.tasks}>\n            {tasks.map((task, index) => {\n              return <Tasks data={task} handleDelete={this.handleDelete} />;\n            })}\n          </div>\n        </div>\n        <div className=\"reset\" onClick={this.handleReset}>\n          Reset\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}